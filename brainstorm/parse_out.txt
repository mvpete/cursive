document 
    heading 0
        (Markdown: Syntax<ul id="ProjectSubmenu"><li><a href="/projects/markdown/" title="Markdown Project Page">Main</a></li><li><a href="/projects/markdown/basics" title="Markdown Basics">Basics</a></li><li><a class="selected" title="Markdown Syntax Documentation">Syntax</a></li><li><a href="/projects/markdown/license" title="Pricing and License Information">License</a></li><li><a href="/projects/markdown/dingus" title="Online Markdown Web Form">Dingus</a></li></ul>Overview   )
            (PhilosophyInline HTMLAutomatic Escaping for Special CharactersBlock ElementsParagraphs and Line BreaksHeadersBlockquotesListsCode BlocksHorizontal RulesSpan ElementsLinksEmphasisCodeImagesMiscellaneousBackslash EscapesAutomatic Links)
        (   )
                    (Note: This document is itself written using Markdown; youcan [see the source for it by adding '.text' to the URL][src].[src]: /projects/markdown/syntax.text)
                    ( )
        ( *)
    heading 0
        (<h2 id"overview">Overview</h2><h3 id="philosophy">Philosophy</h3>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.Readability, however, is emphasized above all else. A Markdown-formatteddocument should be publishable as-is, as plain text, without lookinglike it's been marked up with tags or formatting instructions. WhileMarkdown's syntax has been influenced by several existing text-to-HTMLfilters -- including [Setext] [1], [atx] [2], [Textile] [3], [reStructuredText] [4],[Grutatext] [5], and [EtText] [6] -- the single biggest source ofinspiration for Markdown's syntax is the format of plain text email.[1]: http://docutils.sourceforge.net/mirror/setext.html[2]: http://www.aaronsw.com/2002/atx/[3]: http://textism.com/tools/textile/[4]: http://docutils.sourceforge.net/rst.html[5]: http://www.triptico.com/software/grutatxt.html[6]: http://ettext.taint.org/doc/To this end, Markdown's syntax is comprised entirely of punctuationcharacters, which punctuation characters have been carefully chosen soas to look like what they mean. E.g., asterisks around a word actuallylook like \)
                    (emphasis\)
        (. Markdown lists look like, well, lists. Evenblockquotes look like quoted passages of text, assuming you've everused email.<h3 id="html">Inline HTML</h3>Markdown's syntax is intended for one purpose: to be used as aformat for )
                    (writing)
        ( for the web.Markdown is not a replacement for HTML, or even close to it. Itssyntax is very small, corresponding only to a very small subset ofHTML tags. The idea is )
                    (not)
        ( to create a syntax that makes it easierto insert HTML tags. In my opinion, HTML tags are already easy toinsert. The idea for Markdown is to make it easy to read, write, andedit prose. HTML is a )
                    (publishing)
        ( format; Markdown is a )
                    (writing)
        (format. Thus, Markdown's formatting syntax only addresses issues thatcan be conveyed in plain text.For any markup that is not covered by Markdown's syntax, you simplyuse HTML itself. There's no need to preface it or delimit it toindicate that you're switching from Markdown to HTML; you just usethe tags.The only restrictions are that block-level HTML elements -- e.g. `<div>`,`<table>`, `<pre>`, `<p>`, etc. -- must be separated from surroundingcontent by blank lines, and the start and end tags of the block shouldnot be indented with tabs or spaces. Markdown is smart enough notto add extra (unwanted) `<p>` tags around HTML block-level tags.For example, to add an HTML table to a Markdown article:This is a regular paragraph.<table><tr><td>Foo</td></tr></table>This is another regular paragraph.Note that Markdown formatting syntax is not processed within block-levelHTML tags. E.g., you can't use Markdown-style `)
                    (emphasis)
        (` inside anHTML block.Span-level HTML tags -- e.g. `<span>`, `<cite>`, or `<del>` -- can beused anywhere in a Markdown paragraph, list item, or header. If youwant, you can even use HTML tags instead of Markdown formatting; e.g. ifyou'd prefer to use HTML `<a>` or `<img>` tags instead of Markdown'slink or image syntax, go right ahead.Unlike block-level HTML tags, Markdown syntax )
                    (is)
        ( processed withinspan-level tags.<h3 id="autoescape">Automatic Escaping for Special Characters</h3>In HTML, there are two characters that demand special treatment: `<`and `&`. Left angle brackets are used to start tags; ampersands areused to denote HTML entities. If you want to use them as literalcharacters, you must escape them as entities, e.g. `&lt;`, and`&amp;`.Ampersands in particular are bedeviling for web writers. If you want towrite about 'AT&T', you need to write '`AT&amp;T`'. You even need toescape ampersands within URLs. Thus, if you want to link to:http://images.google.com/images?num=30&q=larry+birdyou need to encode the URL as:http://images.google.com/images?num=30&amp;q=larry+birdin your anchor tag `href` attribute. Needless to say, this is easy toforget, and is probably the single most common source of HTML validationerrors in otherwise well-marked-up web sites.Markdown allows you to use these characters naturally, taking care ofall the necessary escaping for you. If you use an ampersand as part ofan HTML entity, it remains unchanged; otherwise it will be translatedinto `&amp;`.So, if you want to include a copyright symbol in your article, you can write:&copy;and Markdown will leave it alone. But if you write:AT&TMarkdown will translate it to:AT&amp;TSimilarly, because Markdown supports )
                (, if you useangle brackets as delimiters for HTML tags, Markdown will treat them assuch. But if you write:4 < 5Markdown will translate it to:4 &lt; 5However, inside Markdown code spans and blocks, angle brackets andampersands are )
                    (always)
        ( encoded automatically. This makes it easy to useMarkdown to write about HTML code. (As opposed to raw HTML, which is aterrible format for writing about HTML syntax, because every single `<`and `&` in your example code needs to be escaped.))
                    ( )
        ( *)
    (********)
    unordered_list 
                            (-)
            (  *)
    heading 0
        (<h2 id"span">Span Elements</h2><h3 id="link">Links</h3>Markdown supports two style of links: )
                    (inline)
        ( and )
                    (reference)
        (.In both styles, the link text is delimited by [square brackets].To create an inline link, use a set of regular parentheses immediatelyafter the link text's closing square bracket. Inside the parentheses,put the URL where you want the link to point, along with an )
                    (optional)
        (title for the link, surrounded in quotes. For example:This is )
                ( inline link.has no title attribute.Will produce:<p>This is <a href="http://example.com/" title="Title">an example</a> inline link.</p><p><a href="http://example.net/">This link</a> has notitle attribute.</p>If you're referring to a local resource on the same server, you canuse relative paths:See my )
                ( page for details.   Reference-style links use a second set of square brackets, insidewhich you place a label of your choosing to identify the link:This is [an example][id] reference-style link.You can optionally use a space to separate the sets of brackets:This is [an example] [id] reference-style link.Then, anywhere in the document, you define your link label like this,on a line by itself:[id]: http://example.com/  "Optional Title Here"That is:(optionally   Square brackets containing the link identifier (optionallyindented from the left margin using up to three spaces);colon;   followed by a colon;tabs);   followed by one or more spaces (or tabs);link;   followed by the URL for the link;enclosed   optionally followed by a title attribute for the link, enclosedin double or single quotes, or enclosed in parentheses.The following three link definitions are equivalent:[foo]: http://example.com/  "Optional Title Here"[foo]: http://example.com/  'Optional Title Here'[foo]: http://example.com/  (Optional Title Here))
                    (Note:)
        ( There is a known bug in Markdown.pl 1.0.1 which preventssingle quotes from being used to delimit link titles.The link URL may, optionally, be surrounded by angle brackets:[id]: <http://example.com/>  "Optional Title Here"You can put the title attribute on the next line and use extra spacesor tabs for padding, which tends to look better with longer URLs:[id]: http://example.com/longish/path/to/resource/here"Optional Title Here"Link definitions are only used for creating links during Markdownprocessing, and are stripped from your document in the HTML output.Link definition names may consist of letters, numbers, spaces, andpunctuation -- but they are )
                    (not)
        ( case sensitive. E.g. these twolinks:[link text][a][link text][A]are equivalent.The )
                    (impllinknamename)
        ( shortcut allows you to omit the name of thelink, in which case the link text itself is used as the name.Just use an empty set of square brackets -- e.g., to link the word"Google" to the google.com web site, you could simply write:[Google][]And then define the link:[Google]: http://google.com/Because link names may contain spaces, this shortcut even works formultiple words in the link text:Visit [Daring Fireball][] for more information.And then define the link:[Daring Fireball]: http://daringfireball.net/Link definitions can be placed anywhere in your Markdown document. Itend to put them immediately after each paragraph in which they'reused, but if you want, you can put them all at the end of yourdocument, sort of like footnotes.Here's an example of reference links in action:I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].[1]: http://google.com/        "Google"[2]: http://search.yahoo.com/  "Yahoo Search"[3]: http://search.msn.com/    "MSN Search"Using the implicit link name shortcut, you could instead write:I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].[google]: http://google.com/        "Google"[yahoo]:  http://search.yahoo.com/  "Yahoo Search"[msn]:    http://search.msn.com/    "MSN Search"Both of the above examples will produce the following HTML output:<p>I get 10 times more traffic from <a href="http://google.com/"title="Google">Google</a> than from<a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a>or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.</p>For comparison, here is the same paragraph written usingMarkdown's inline link style:I get 10 times more traffic from )
                (than from )
                ( or.The point of reference-style links is not that they're easier towrite. The point is that with reference-style links, your documentsource is vastly more readable. Compare the above examples: usingreference-style links, the paragraph itself is only 81 characterslong; with inline-style links, it's 176 characters; and as raw HTML,it's 234 characters. In the raw HTML, there's more markup than thereis text.With Markdown's reference-style links, a source document much moreclosely resembles the final output, as rendered in a browser. Byallowing you to move the markup-related metadata out of the paragraph,you can add links without interrupting the narrative flow of yourprose.<h3 id="em">Emphasis</h3>Markdown treats asterisks (`)
                    (andan (`)
                ( )
        (`) as indicators ofemphasis. Text wrapped with one `)
                    (oro``)
                ( )
        (` will be wrapped with anHTML `<em>` tag; double `)
                    (`'or``)
        (`'s will be wrapped with an HTML`<strong>` tag. E.g., this input:)
                    (asterisksasteri)
                ( )
            (underscoresunders)
            ( )
    heading 0
        (will produce:<em>single asterisks</em><em>single underscores</em><strong>double asterisks</strong><strong>double underscores</strong>You can use whichever style you prefer; the lone restriction is thatthe same character must be used to open and close an emphasis span.Emphasis can be used in the middle of a word:un)
                    (frigging)
        (believableBut if you surround an `)
                    (oro``)
                ( )
        (` with spaces, it'll be treated as aliteral asterisk or underscore.To produce a literal asterisk or underscore at a position where itwould otherwise be used as an emphasis delimiter, you can backslashescape it:\)
                    (text )
                ( )
            (suby asterisks\)
        (<h3 id"code">Code</h3>To indicate a span of code, wrap it with backtick quotes (`` ` ``).Unlike a pre-formatted code block, a code span indicates code within anormal paragraph. For example:Use the `printf()` function.will produce:<p>Use the <code>printf()</code> function.</p>To include a literal backtick character within a code span, you can usemultiple backticks as the opening and closing delimiters:``There is a literal backtick (`) here.``which will produce this:<p><code>There is a literal backtick (`) here.</code></p>The backtick delimiters surrounding a code span may include spaces --one after the opening, one before the closing. This allows you to placeliteral backtick characters at the beginning or end of a code span:A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``will produce:<p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p>With a code span, ampersands and angle brackets are encoded as HTMLentities automatically, which makes it easy to include example HTMLtags. Markdown will turn this:Please don't use any `<blink>` tags.into:<p>Please don't use any <code>&lt;blink&gt;</code> tags.</p>You can write this:`&#8212;` is the decimal-encoded equivalent of `&mdash;`.to produce:<p><code>&amp;#8212;</code> is the decimal-encodedequivalent of <code>&amp;mdash;</code>.</p><h3 id="img">Images</h3>Admittedly, it's fairly difficult to devise a "natural" syntax forplacing images into a plain text document format.Markdown uses an image syntax that is intended to resemble the syntaxfor links, allowing for two styles: )
                    (inline)
        ( and )
                    (reference)
        (.Inline image syntax looks like this:)
                (That is:`;   An exclamation mark: ``;`alt`   followed by a set of square brackets, containing the `alt`attribute text for the image;to   followed by a set of parentheses, containing the URL or path tothe image, and an optional `title` attribute enclosed in doubleor single quotes.Reference-style image syntax looks like this:[Alt text][id]Where "id" is the name of a defined image reference. Image referencesare defined using syntax identical to link references:[id]: url/to/image  "Optional title attribute"As of this writing, Markdown has no syntax for specifying thedimensions of an image; if this is important to you, you can simplyuse regular HTML `<img>` tags.)
                    ( )
        ( *)
    heading 0
        (<h2 id"misc">Miscellaneous</h2><h3 id="autolink">Automatic Links</h3>Markdown supports a shortcut style for creating "automatic" links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:<http://example.com/>Markdown will turn this into:<a href="http://example.com/">http://example.com/</a>Automatic links for email addresses work similarly, except thatMarkdown will also perform a bit of randomized decimal and hexentity-encoding to help obscure your address from address-harvestingspambots. For example, Markdown will turn this:<address@example.com>into something like this:<a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>which will render in a browser as a clickable link to "address@example.com".(This sort of entity-encoding trick will indeed fool many, if notmost, address-harvesting bots, but it definitely won't fool all ofthem. It's better than nothing, but an address published in this waywill probably eventually start receiving spam.)<h3 id="backslash">Backslash Escapes</h3>Markdown allows you to use backslash escapes to generate literalcharacters which would otherwise have special meaning in Markdown'sformatting syntax. For example, if you wanted to surround a wordwith literal asterisks (instead of an HTML `<em>` tag), you can usebackslashes before the asterisks, like this:\)
                    (asterisks\asteris)
                ( )
        (Markdown provides backslash escapes for the following characters:\   backslash`   backtickasterisk   asteriskunderscore   underscore{}  curly braces[]  square brackets()  parentheseshash mark+	plus sign-	minus sign (hyphen).   dot   exclamation mark)
